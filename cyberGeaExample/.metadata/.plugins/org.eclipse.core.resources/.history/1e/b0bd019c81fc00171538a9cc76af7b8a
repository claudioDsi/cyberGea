package org.cyberGea.deviceManger.provider;

import java.lang.reflect.Field;

import org.cyberGea.devicemanager.DeviceHandler;
import org.cybergea.dbmanager.provider.Environment;

public class Actuator implements DeviceHandler
{
	Environment newEnv; 
	
	public Actuator()
	{
		this.newEnv = new Environment();
	}
	

	/*
	 * (non-Javadoc)
	 * @see org.cybergea.devicemanager.DeviceHandler#changeConditions(org.cybergea.dbmanager.provider.Environment)
	 */
	@Override
	public void moveActuator(Environment conditions)
	{
		String name;
		Object value;
		Field app;
		Class<?> current = conditions.getClass();
		Class<?> newCond = newEnv.getClass();
		
		Field fls[] = current.getDeclaredFields();		

		for(Field f : fls)
		{
			f.setAccessible(true);
			name = f.getName();
			
			try 
			{
				value = (Object) f.get(conditions);
				
				if(!(value.equals(null)))
				{
					app = newCond.getDeclaredField(name);
					app.setAccessible(true);
					app.set(newEnv, value);
				}
				
			} catch (IllegalArgumentException | IllegalAccessException | NullPointerException | SecurityException | NoSuchFieldException e) 
			{
				System.out.println("Conditions of " + name + " not changed");
			} 
			
		}
		
		//System.out.println(newEnv.toString());
		
	}
	
}
