package org.cybergea.datanalyzer;

import java.util.Hashtable;

import javax.servlet.Servlet;

import org.cybergea.dbmanager.DataExchange;
import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import org.osgi.framework.ServiceRegistration;
import org.osgi.util.tracker.ServiceTracker;

public class Activator implements BundleActivator
{

	ServiceRegistration<Servlet> reg;
	private PresentationUpdater pres;
	private CollectorTracker dCustom;
	private ServiceTracker collectorTracker;
	
	private TrackerCustomizer dataTracker;
	private ServiceTracker serviceTracker;
	

	/*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
	 */
	public void start(BundleContext context) throws Exception 
	{
		Hashtable<String, String> props = new Hashtable<String, String>();
		
	    this.pres = new PresentationUpdater();	 		
	    
		props.put("osgi.http.whiteboard.servlet.pattern", "/pres");
	    props.put("servlet.init.message", "Hi, this is the presentation updater");
	    this.reg = context.registerService(Servlet.class, pres, props);
	    
	  
	    ServiceReference reference = context.getServiceReference(DataExchange.class);
	    DataExchange inter=(DataExchange) context.getService(reference);
	    
	    
	    dCustom = new CollectorTracker(context, pres);
	    dbTracker = new ServiceTracker(context, DataAggregator.class.getName(), dCustom);
	    
	    dataTracker = new TrackerCustomizer(context, pres);
	    serviceTracker = new ServiceTracker(context, DataExchange.class.getName(), dataTracker);
	    
	    
	    serviceTracker.open();
	   // System.out.println(inter.getData());
	}

	/*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext bundleContext) throws Exception
	{
		
	}

}
