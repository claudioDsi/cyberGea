package org.cybergea.datanalyzer;

import org.cyberGea.rawDataCollector.DataAggregator;
import org.cybergea.dbmanager.DataExchange;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import org.osgi.util.tracker.ServiceTrackerCustomizer;

public class CollectorTracker implements ServiceTrackerCustomizer
{
	PresentationUpdater de;
	private Thread t;
    private final BundleContext context;

    
    public CollectorTracker(BundleContext context, PresentationUpdater de) 
    {
        this.context = context;
        this.de = de;
    }

	@Override
	public Object addingService(ServiceReference ref) 
	{	
		de.bindDataAggregator((DataAggregator)context.getService(ref));
		
		
		t = new Thread(new Runnable()
        {
			private boolean active = true;

			@Override
			public void run() 
			{
				while(active) {
					de.checkConditions();
					/*
					try
					{
						Thread.sleep(500);
						de.checkConditions();
						
					}catch(Exception e)
					{
						System.out.println(e.getMessage());
					}
					*/
				}

			
			}
			
			public void stopThread()
			{
				this.active = false;
			}
        	
        });
		
		t.start();
		
		//de.printEnv();
		return de;
	}

	@Override
	public void modifiedService(ServiceReference arg0, Object arg1)
	{
		// TODO Auto-generated method stub
		
	}

	@Override
	public void removedService(ServiceReference arg0, Object arg1)
	{
		// TODO Auto-generated method stub
		
	}

}
